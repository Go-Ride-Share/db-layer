openapi: "3.0.0"
info:
  version: 1.0.0
  title: Go Ride Share DB Layer API
  description: <h3> Internal DB API for Post Operations

paths:
  /api/createPost:
    post:
      summary: Save a completed post to the database
      operationId: createPost
      tags:
        - Posts
      requestBody:
        required: true
        content:  
          application/json:
            schema:
              $ref: '#/components/schemas/PostObject'   
      responses:
        '200':
          description:  Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulPostResponse"       
        '400':
          description: Unsuccessful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsuccessfulResponse"  
  /api/updatePost:
      patch:
        summary: Save a completed post to the database
        operationId: updatePost
        tags:
          - Posts
        requestBody:
          required: true
          content:  
            application/json:
              schema:
                $ref: '#/components/schemas/PostObject'   
        responses:
          '200':
            description:  Success
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/SuccessfulPostResponse"       
          '400':
            description: Unsuccessful
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/UnsuccessfulResponse"                    
  /api/getPosts/{user_id}:
    get:
      summary: Get a users posts from the database
      operationId: getPosts
      tags:
        - Posts
      parameters:
        - name: user_id
          in: path
          description: The ID of the user whos posts you want to query
          required: true
          schema:
            type: string
            format: string    
      responses:   
        '200':
          description:  Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostList"          
        '400':
          description: Unsuccessful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsuccessfulResponse"                            
  /api/getUser:
    get:
      summary: Queries a users Profile from the database
      operationId: getUser
      parameters:
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: string
        - name: X-Db-Token
          in: header
          required: true
          schema:
            type: string  
      tags:
        - Users
      responses:   
        '200':
          description:  Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"   
  /api/CreateAccount:
    post:
      summary: Create a new Account
      operationId: CreateUser
      tags:
        - Users
      requestBody:
        required: true
        content:  
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:   
        '200':
          description:  Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountResponse"         
  /api/EditUser:
    post:
      summary: Edit a user
      operationId: EditUser
      tags:
        - Users
      requestBody:
        required: true
        content:  
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:   
        '200':
          description:  Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountResponse"      
components:
  schemas:
    PostObject:
      type: object
      required:
        - name
        - originLng
        - originLat
        - destinationLng
        - destinationLat
        - departureDate
        - price 
        - seatsAvailable
      properties:
        name:
          type: string  
        originLng:
          type: number
          format: float  
        originLat:
          type: number
          format: float  
        destinationLng:
          type: number
          format: float  
        destinationLat:
          type: number
          format: float  
        departureDate:
          type: string  
        price:
          type: number
          format: float                 
        seatsAvailable:
          type: number
          format: float   
    PostList:
      type: object
      properties:
        post_id:
          type: array
          items:
            type: object     
    SuccessfulPostResponse:
      type: object
      required:
        - post_id
      properties:
        post_id:
          type: string           
    UnsuccessfulResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string      
          default: "Incomplete post data" 
    User:
      type: object
      required:
        - email
        - password
        - name
        - bio
        - phone
        - photo
      properties:
        email:
          type: string      
          example: "test@email.com" 
        password:
          type: string      
          example: "testPassword"     
        name:
          type: string      
          example: "testName"     
        bio:
          type: string      
          example: "testBio"            
        phone:
          type: string      
          example: "4312245323"          
        photo:
          type: string      
          example: "testPhotoUrl"   
    CreateAccountResponse:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: string                     